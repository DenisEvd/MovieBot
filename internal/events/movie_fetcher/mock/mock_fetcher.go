// Code generated by MockGen. DO NOT EDIT.
// Source: internal/events/movie_fetcher/fetcher.go

// Package mock_movie_fetcher is a generated GoMock package.
package mock_movie_fetcher

import (
	events "MovieBot/internal/events"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMovieFetcher is a mock of MovieFetcher interface.
type MockMovieFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockMovieFetcherMockRecorder
}

// MockMovieFetcherMockRecorder is the mock recorder for MockMovieFetcher.
type MockMovieFetcherMockRecorder struct {
	mock *MockMovieFetcher
}

// NewMockMovieFetcher creates a new mock instance.
func NewMockMovieFetcher(ctrl *gomock.Controller) *MockMovieFetcher {
	mock := &MockMovieFetcher{ctrl: ctrl}
	mock.recorder = &MockMovieFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMovieFetcher) EXPECT() *MockMovieFetcherMockRecorder {
	return m.recorder
}

// FetchMovieById mocks base method.
func (m *MockMovieFetcher) FetchMovieById(id int) (events.Movie, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchMovieById", id)
	ret0, _ := ret[0].(events.Movie)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchMovieById indicates an expected call of FetchMovieById.
func (mr *MockMovieFetcherMockRecorder) FetchMovieById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchMovieById", reflect.TypeOf((*MockMovieFetcher)(nil).FetchMovieById), id)
}

// FetchMoviesByTitle mocks base method.
func (m *MockMovieFetcher) FetchMoviesByTitle(title string) ([]events.Movie, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchMoviesByTitle", title)
	ret0, _ := ret[0].([]events.Movie)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchMoviesByTitle indicates an expected call of FetchMoviesByTitle.
func (mr *MockMovieFetcherMockRecorder) FetchMoviesByTitle(title interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchMoviesByTitle", reflect.TypeOf((*MockMovieFetcher)(nil).FetchMoviesByTitle), title)
}
